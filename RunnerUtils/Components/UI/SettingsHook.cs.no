using HarmonyLib;
using BepInEx;
using BepInEx.Unity.Mono;
using BepInEx.Configuration;
using UnityEngine;
using UnityEngine.SceneManagement;
using TMPro;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Enemy;
using UnityEngine.UI;
using System.Runtime.CompilerServices;
using Fleece;
using System.Data;

namespace RunnerUtils.UI
{
    public class SettingsHook
    {
        public static List<UISettingsSubMenu> additionalSubMenus = new List<UISettingsSubMenu>();

        static SettingsHook() {
        }


        [HarmonyPatch(typeof(UISettingsRoot))]
        public static class Root
        {
            [HarmonyPatch("Start")]
            [HarmonyPrefix]
            public static void Init(ref UISettingsSubMenu[] ___subMenus, ref UISettingsRoot __instance, ref GameObject ___tabPrefab, ref UITabGroup ___tabGroup) {
                var anchorTransform = __instance.gameObject.transform.Find("Main Anchor/Listing Anchor").transform;
                //var root = GameObject.Instantiate(Mod.bundle.LoadAsset<GameObject>("Runner Utils"), anchorTransform);
                var root = GameObject.Instantiate(new GameObject(), anchorTransform);
                root.name = "Runner Utils";
                var subMenu = root.AddComponent<UISettingsSubMenuRunnerUtils>();

                var layout = root.AddComponent<VerticalLayoutGroup>();
                
                layout.spacing = 3;
                layout.childForceExpandHeight = false;
                layout.childControlHeight = false;

                var tempC = GameObject.Instantiate(___tabPrefab, ___tabGroup.transform).GetComponent<UISettingsTab>();
                tempC.Initialize(___subMenus[0]);
                
                var toggle = GameObject.Instantiate(__instance.gameObject.transform.Find("Main Anchor/Listing Anchor/Visual Settings/Toggle V Sync").gameObject, root.transform);
                toggle.name = "Yeah";
                var option = toggle.GetComponent<UISettingsOptionToggle>();
                GameObject.Destroy(tempC);

                subMenu.yeah = option;


                additionalSubMenus.Add(subMenu);

                ___subMenus = ___subMenus.Concat(additionalSubMenus).ToArray();
            }

            [HarmonyPatch(typeof(UISettingsSubMenu), "GetMenuName")]
            public static bool Prefix(UISettingsSubMenu __instance, ref Jumper ___menuName, ref string __result) {
                if (___menuName == null) {
                    __result = "Yaur";
                    return false;
                }
                return true;
            }
        }
    }

    public struct SettingsHookInfo
    {
        public string tabName;
    }
}
